/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package utils;

import java.awt.Cursor;
import javax.swing.JOptionPane;
import java.io.*;
import javax.swing.JRootPane;
import parallel.distributed.DLock;

/**
 * Graphical client to the distributed lock functionality DLock[Clt|Srv].
 * Run this program from the <CODE>DLockClt.bat</CODE> batch file in the root
 * directory of this project (providing in the command-line, the right address
 * where the <CODE>DLockSrv</CODE> server lives.)
 * NOTICE: This GUI app is the only one in the entire popt4jlib library that 
 * does not compile (or run) under JDK1.4; instead it requires JDK6+ to compile 
 * and run.
 * <p>Title: popt4jlib</p>
 * <p>Description: parallel optimization library for Java</p>
 * <p>Copyright: Copyright (c) 2016</p>
 * <p>Company: </p>
 * @author Ioannis T. Christou
 * @version 1.0
 */
public class DLockCltJFrame extends javax.swing.JFrame {

    private final static String _lfn = "/temp/lockstring.txt";
    private File _lockfile = null;
    private static File _runningfile = new File("/temp/running.txt");
    private boolean _hasLock = false;
    private static String _lockserver = "localhost";
    private final static int _lockport = 7892;
    private final static int _unlockport = 7893;
    private static DLock _dlock = null;

    /**
     * Creates new form ClientJFrame
     */
    public DLockCltJFrame() {
        setUndecorated(true);  // no top window line with min/max/close buttons
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        initComponents();
        // check for existing lock.
        _lockfile = new File(_lfn);
        if (_lockfile.exists()) {
            _hasLock = true;
        }
        _textArea.setEditable(false);
        if (_hasLock) {
            _lockB.setEnabled(false);
            _lockNOWB.setEnabled(false);
            _unlockB.setEnabled(true);
            _textArea.setText("You currently have the LOCK on server "+_lockserver+
                              "\nIf you close this app, you risk messing up the server.");
            _closeB.setEnabled(false);
        } else {
            _lockB.setEnabled(true);
            _lockNOWB.setEnabled(true);
            _unlockB.setEnabled(false);
            _closeB.setEnabled(true);
            _textArea.setText("You don't have the lock on server "+_lockserver+
                              "\nYou may close this app now.");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    _lockB = new javax.swing.JButton();
    _unlockB = new javax.swing.JButton();
    _closeB = new javax.swing.JButton();
    _taSP = new javax.swing.JScrollPane();
    _textArea = new javax.swing.JTextArea();
    _lockNOWB = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    _lockB.setText("Get Lock");
    _lockB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        _lockBActionPerformed(evt);
      }
    });

    _unlockB.setText("Release Lock");
    _unlockB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        _unlockBActionPerformed(evt);
      }
    });

    _closeB.setText("Close");
    _closeB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        _closeBActionPerformed(evt);
      }
    });

    _textArea.setColumns(20);
    _textArea.setLineWrap(true);
    _textArea.setRows(5);
    _taSP.setViewportView(_textArea);

    _lockNOWB.setText("Get Lock NOW");
    _lockNOWB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        _lockNOWBActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(_taSP)
          .addGroup(layout.createSequentialGroup()
            .addComponent(_lockB)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(_lockNOWB)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
            .addComponent(_unlockB, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(_closeB)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(_taSP, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(_lockB)
          .addComponent(_unlockB)
          .addComponent(_closeB)
          .addComponent(_lockNOWB))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void _closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__closeBActionPerformed
        System.exit(0);
    }//GEN-LAST:event__closeBActionPerformed

    private void _lockBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__lockBActionPerformed
        if (_lockfile.exists()) {
            _textArea.setText("Lock is already obtained by another (previous?) client on your machine");
            JOptionPane.showMessageDialog(this, "The client will terminate");
            System.exit(0);
        }
        _textArea.setText("Waiting to get Lock on server "+_lockserver+
                          ". If you close this app now, you face a (small) risk"+
                          " of hanging the central lock server");
        _lockB.setEnabled(false);
        _lockNOWB.setEnabled(false);
        _closeB.setEnabled(false);  // don't allow closing this app while trying to get the lock
        repaint();
        // the rest may block, and thus needs to be run on a separate thread
        // so that the repaint() above can occur while the other thread is
        // waiting for a reply from server
        Thread t = new Thread(new Runnable() {
            public void run() {
                try {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    _dlock.getLock();
                    _lockfile.createNewFile();
                    _hasLock = true;
                    _textArea.setText("You currently have the LOCK on server "+_lockserver+
                                      "\nIf you close this app before releasing the lock, you risk messing up the server");
                    _unlockB.setEnabled(true);
                    _closeB.setEnabled(false);  // don't let user close the app now
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
                catch (Exception e) {
                    _textArea.setText("Connection to the server "+_lockserver+" was lost. Close this window, but don't assume you have the lock");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    _closeB.setEnabled(true);
                }
            }}
            );
        t.start();
    }//GEN-LAST:event__lockBActionPerformed

    private void _unlockBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__unlockBActionPerformed
        if (!_lockfile.exists()) {
            _textArea.setText("Lock is already released by another client running on your machine");
            JOptionPane.showMessageDialog(this, "The client will terminate");
            System.exit(0);
        }
        _textArea.setText("Releasing the Lock on server "+_lockserver);
        _unlockB.setEnabled(false);
        _closeB.setEnabled(false);  // don't allow closing app now
        repaint();
        try {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            _dlock.releaseLock();
            _lockfile.delete();
            _hasLock = false;
            _textArea.setText("You DON'T have the LOCK on server "+_lockserver+
                              " \nYou may now close the app if you want to.");
            _lockB.setEnabled(true);
            _lockNOWB.setEnabled(true);
            _closeB.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        catch (Exception e) {
            _textArea.setText("Connection to the server "+_lockserver+" was lost. Close this window, but don't assume you have/don't have the lock");
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            _closeB.setEnabled(true);
        }
    }//GEN-LAST:event__unlockBActionPerformed

    private void _lockNOWBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__lockNOWBActionPerformed
        if (_lockfile.exists()) {
            _textArea.setText("Lock is already obtained by another (previous?) client on your machine");
            JOptionPane.showMessageDialog(this, "The client will terminate");
            System.exit(0);
        }
        _textArea.setText("Trying to get NOW Lock on server "+_lockserver);
        _lockB.setEnabled(false);
        _lockNOWB.setEnabled(false);
        _closeB.setEnabled(false);  // don't allow closing app now
        repaint();
        try {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if (_dlock.getLockIfAvailable()) {
                _lockfile.createNewFile();
                _hasLock = true;
                _textArea.setText("You currently have the LOCK on server "+_lockserver+
                                  "Don't close the app now, or you risk messing up the server.");
                _unlockB.setEnabled(true);
            }
            else {
                _textArea.setText("server has given the lock elsewhere. Try again later.");
                _lockB.setEnabled(true);
                _lockNOWB.setEnabled(true);
                _unlockB.setEnabled(false);
                _closeB.setEnabled(true);
            }
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        catch (Exception e) {
            _textArea.setText("Connection to the server "+_lockserver+" was lost. Close this window, but don't assume you have the lock");
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            _closeB.setEnabled(true);
        }
    }//GEN-LAST:event__lockNOWBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] arr = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int i=0; i<arr.length; i++) {
                javax.swing.UIManager.LookAndFeelInfo info = arr[i];
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DLockCltJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DLockCltJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DLockCltJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DLockCltJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        _runningfile.deleteOnExit();
        try {
            if (!_runningfile.createNewFile()) {
                System.err.println("another ClientJFrame process is already running");
                System.exit(-1);
            }
        }
        catch (IOException e) {
            System.err.println("couldn't create _runningfile at /temp/running.txt");
            System.exit(-1);
        }
        if (args.length>0)
            _lockserver = args[0];
        try {
            _dlock = DLock.getInstance(_lockserver, _lockport, _unlockport);
        }
        catch (Exception e) {
            System.err.println("DLock couldn't be established.");
            System.exit(-1);
        }
        //JFrame.setDefaultLookAndFeelDecorated(false);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DLockCltJFrame cjf = new DLockCltJFrame();
                cjf.setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton _closeB;
  private javax.swing.JButton _lockB;
  private javax.swing.JButton _lockNOWB;
  private javax.swing.JScrollPane _taSP;
  private javax.swing.JTextArea _textArea;
  private javax.swing.JButton _unlockB;
  // End of variables declaration//GEN-END:variables
}
