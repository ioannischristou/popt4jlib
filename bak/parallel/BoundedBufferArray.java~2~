package parallel;

/**
 * a bounded-length FIFO buffer implemented as an Object Array. It's
 * meant to be used as a (faster) replacement for Vector structures in
 * XXXMsgPassingCoordinator family of classes.
 * <p>Title: popt4jlib</p>
 * <p>Description: A Parallel Meta-Heuristic Optimization Library in Java</p>
 * <p>Copyright: Copyright (c) 2011</p>
 * <p>Company: </p>
 * @author Ioannis T. Christou
 * @version 1.0
 */
public class BoundedBufferArray {
  private Object[] _buffer;
  private int _head;
  private int _tail;

  /**
   * public constructor.
   * @param maxlen int
   */
  public BoundedBufferArray(int maxlen) {
    _buffer = new Object[maxlen];
    _head = -1;
    _tail = -1;
  }


  /**
   * add an object in the buffer (if there is space).
   * @param obj Object
   * @throws ParallelException if the buffer is full.
   */
  public synchronized void addElement(Object obj) throws ParallelException {
    if (_head!=-1 && prev(_head)==_tail)
      throw new ParallelException("cannot add any more data to this buffer");
    if (_head==-1) {
      _head = 0;
      _tail = _head;
      _buffer[0] = obj;
      return;
    } else {
      _tail = next(_tail);
      _buffer[_tail] = obj;
      return;
    }
  }





  private int prev(int head) {
    return head>0 ? head-1 : _buffer.length - 1;
  }


  private int next(int tail) {
    return tail < _buffer.length-1 ? tail+1 : 0;
  }
}
