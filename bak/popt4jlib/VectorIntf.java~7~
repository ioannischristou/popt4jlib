package popt4jlib;

/**
 * defines vectors in R^n
 * <p>Title: popt4jlib</p>
 * <p>Description: A Parallel Meta-Heuristic Optimization Library in Java</p>
 * <p>Copyright: Copyright (c) 2011</p>
 * <p>Company: </p>
 * @author Ioannis T. Christou
 * @version 1.0
 */
public interface VectorIntf {
  /**
   * return a new VectorIntf object given the double[] arg passed in
   * @param arg double[]
   * @throws IllegalArgumentException
   * @return VectorIntf
   */
  public VectorIntf newInstance(double[] arg) throws IllegalArgumentException;


  /**
   * return a new <CODE>VectorIntf</CODE> that is an exact copy of this object.
   * @return VectorIntf
   */
  public VectorIntf newCopy();


  /**
   * return a new <CODE>VectorIntf</CODE> that is an exact copy of this object
   * but each coordinate of the new object is then multiplied by the value
   * passed in the argument.
   * @param multFactor double
   * @return VectorIntf
   */
  public VectorIntf newCopyMultBy(double multFactor);


  /**
   * get the i-th coordinate of this <CODE>VectorIntf</CODE> object.
   * @param coord int -must be in the set {0,1,...<CODE>getNumCoords()</CODE>-1}
   * @throws IndexOutOfBoundsException if the index is out of range
   * @return double
   */
  public double getCoord(int coord) throws IndexOutOfBoundsException;


  /**
   * set the value of the i-th coordinate of this object.
   * @param i int -must be in the set {0,1,...<CODE>getNumCoords()</CODE>-1}
   * @param val double
   * @throws IndexOutOfBoundsException if the index is out of range
   */
  public void setCoord(int i, double val) throws IndexOutOfBoundsException;


  /**
   * return the number of components (dimensionality) of this vector.
   * @return int
   */
  public int getNumCoords();


  /**
   * return a double[] representation of this vector.
   * @return double[]
   */
  public double[] getDblArray1();
}

