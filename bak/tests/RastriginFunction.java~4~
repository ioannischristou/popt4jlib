package tests;

import popt4jlib.*;
import java.util.*;

/**
 *
 * <p>Title: popt4jlib</p>
 * <p>Description: A Parallel Meta-Heuristic Optimization Library in Java</p>
 * <p>Copyright: Copyright (c) 2011</p>
 * <p>Company: </p>
 *
 * This class implements the Rastrigin Function in n-dimensions
 * @author Ioannis T. Christou
 * @version 1.0
 */
public class RastriginFunction implements FunctionIntf {
  public RastriginFunction() {
  }

  public double eval(Object arg, Hashtable p) {
    double a = ( (Double) p.get("A")).doubleValue();
    double w = ( (Double) p.get("w")).doubleValue();
    try {
      double[] x = (double[]) arg;
      int n = x.length;
      double res = n * a;
      for (int i = 0; i < n; i++) {
        res += (x[i] * x[i] - a * Math.cos(w * x[i]));
      }
      return res;
    }
    catch (ClassCastException e) {
      VectorIntf x = (VectorIntf) arg;
      int n = x.getNumCoords();
      double res = n * a;
      for (int i = 0; i < n; i++) {
        res += (x.getCoord(i) * x.getCoord(i) - a * Math.cos(w * x.getCoord(i)));
      }
      return res;
    }
  }


  public static void main(String[] args) {
    int n = args.length;
    double[] x = new double[n-2];
    double a = Double.parseDouble(args[0]);
    double w = Double.parseDouble(args[1]);
    Hashtable p = new Hashtable();
    p.put("A",new Double(a));
    p.put("w",new Double(w));
    for (int i=2; i<n; i++) {
      x[i-2] = Double.parseDouble(args[i]);
    }
    RastriginFunction f = new RastriginFunction();
    double res=f.eval(x,p);
    System.out.println(res);
  }
}

